name: Build Docker Images

on:
  pull_request:
    paths-ignore:
      - "*.md"
      - "binder/**"
      - "docs/**"
      - "examples/**"
  push:
    branches:
      - master
    paths-ignore:
      - "*.md"
      - "binder/**"
      - "docs/**"
      - "examples/**"

jobs:
  build:
    name: Build Docker Images
    runs-on: ubuntu-latest
    if: >
      !contains(github.event.head_commit.message, 'ci skip') &&
      !contains(github.event.pull_request.title, 'ci skip')
    steps:
      - name: Clone Main Repo
        uses: actions/checkout@v2
        with:
          path: main
      - name: Clone Wiki
        uses: actions/checkout@v2
        with:
          repository: ${{github.repository}}.wiki
          path: wiki
      - name: Set Up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install Dev Dependencies
        run: |
          python -m pip install --upgrade pip
          make -C main dev-env hadolint-install
      - name: Lint Dockerfiles
        run: make -C main hadolint-all
      - name: Run pre-commit hooks
        run: make -C main pre-commit-all
      - name: Setup QEMU
        run: make -C main qemu-setup
      - name: Setup buildx
        run: make -C main buildx-setup
      # Note dedicated actions exist to setup QEMU and Buildx
      # https://github.com/docker/setup-buildx-action
      # However we are sticking with a portable solution for the time being
      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v1
      # - name: Set up Docker Buildx
      #   id: buildx
      #   uses: docker/setup-buildx-action@v1
      # - name: Builder instance name
      #   run: echo ${{ steps.buildx.outputs.name }}
      # - name: Available platforms
      #   run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Build Multi-arch Docker Images
        run: make -C main build-test-multi-arch-all
      - name: Build Docker Images
        run: make -C main build-test-all
      - name: Run Post-Build Hooks
        run: make -C main hook-all
        env:
          COMMIT_MSG: "${{github.event.head_commit.message}}"
          WIKI_PATH: ../wiki
      - name: Login to Docker Hub
        if: github.ref == 'refs/heads/master'
        run: >
          echo '${{secrets.DOCKERHUB_PASSWORD}}' | docker login --username
          '${{secrets.DOCKERHUB_USERNAME}}' --password-stdin
      - name: Push Images to DockerHub
        if: github.ref == 'refs/heads/master'
        run: make -C main push-all
      - name: Push Wiki to GitHub
        if: github.ref == 'refs/heads/master'
        # Pass GITHUB_REPOSITORY directly to avoid conflict with GitHub Actions built-in env var
        run: make -C main git-commit GITHUB_REPOSITORY='${{ github.repository }}.wiki'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LOCAL_PATH: ../wiki
