name: Build, merge tags, update wiki, test recipes

# [FAST_BUILD] in the PR title makes this workflow only build
# the `jupyter/docker-stacks-foundation` and `jupyter/base-notebook` images
# This allows to run CI faster if a full build is not required
# This only works for a `pull_request` event and does not affect `push` to the `main` branch

on:
  schedule:
    # Weekly, at 03:00 on Monday UTC
    - cron: "0 3 * * 1"
  pull_request:
    paths:
      - ".github/workflows/docker.yml"
      - ".github/workflows/docker-build-test-upload-all.yml"
      # We use local reusable workflows to make architecture clean and simple
      # https://docs.github.com/en/actions/using-workflows/reusing-workflows
      - ".github/workflows/docker-build-test-upload.yml"
      - ".github/workflows/docker-merge-tags.yml"
      - ".github/workflows/docker-tag-push.yml"
      - ".github/workflows/docker-wiki-update.yml"

      # We use local composite actions to combine multiple workflow steps within one action
      # https://docs.github.com/en/actions/creating-actions/about-custom-actions#composite-actions
      - ".github/actions/create-dev-env/action.yml"
      - ".github/actions/load-image/action.yml"

      - "images/**"
      - "!images/*/README.md"
      - "tagging/**"
      - "!tagging/README.md"
      - "tests/**"
      - "!tests/README.md"
      - "requirements-dev.txt"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/docker.yml"
      - ".github/workflows/docker-build-test-upload-all.yml"
      - ".github/workflows/docker-build-test-upload.yml"
      - ".github/workflows/docker-merge-tags.yml"
      - ".github/workflows/docker-tag-push.yml"
      - ".github/workflows/docker-wiki-update.yml"

      - ".github/actions/create-dev-env/action.yml"
      - ".github/actions/load-image/action.yml"

      - "images/**"
      - "!images/*/README.md"
      - "tagging/**"
      - "!tagging/README.md"
      - "tests/**"
      - "!tests/README.md"
      - "requirements-dev.txt"
  workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  # Only cancel in-progress jobs or runs for the current workflow - matches against branch & tags
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-aarch64:
    uses: ./.github/workflows/docker-build-test-upload-all.yml
    with:
      platform: aarch64
      runs-on-fast: ARM64_FAST
      runs-on-slow: ARM64_SLOW
    secrets:
      REGISTRY_USERNAME: ${{ secrets.QUAY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.QUAY_ROBOT_TOKEN }}
    if: github.repository_owner == 'jupyter'

  build-x86_64:
    uses: ./.github/workflows/docker-build-test-upload-all.yml
    with:
      platform: x86_64
      runs-on-fast: ubuntu-latest
      runs-on-slow: ubuntu-latest
    secrets:
      REGISTRY_USERNAME: ${{ secrets.QUAY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.QUAY_ROBOT_TOKEN }}

  merge-tags:
    uses: ./.github/workflows/docker-merge-tags.yml
    with:
      image: ${{ matrix.image-variant.image }}
      variant: ${{ matrix.image-variant.variant }}
    secrets:
      REGISTRY_USERNAME: ${{ secrets.QUAY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.QUAY_ROBOT_TOKEN }}
    strategy:
      matrix:
        image-variant:
          [
            { image: docker-stacks-foundation, variant: default },
            { image: base-notebook, variant: default },
            { image: minimal-notebook, variant: default },
            { image: scipy-notebook, variant: default },
            { image: r-notebook, variant: default },
            { image: julia-notebook, variant: default },
            { image: tensorflow-notebook, variant: default },
            { image: pytorch-notebook, variant: default },
            { image: pytorch-notebook, variant: cuda },
            { image: pytorch-notebook, variant: cuda11 },
            { image: datascience-notebook, variant: default },
            { image: pyspark-notebook, variant: default },
            { image: all-spark-notebook, variant: default },
          ]
    needs: [build-aarch64, build-x86_64]
    if: |
      always() &&
      needs.build-x86_64.result == 'success' &&
      (needs.build-aarch64.result == 'success' || needs.build-aarch64.result == 'skipped') &&
      !contains(github.event.pull_request.title, '[FAST_BUILD]')

  merge-tags-fast:
    uses: ./.github/workflows/docker-merge-tags.yml
    with:
      image: ${{ matrix.image-variant.image }}
      variant: ${{ matrix.image-variant.variant }}
    secrets:
      REGISTRY_USERNAME: ${{ secrets.QUAY_USERNAME }}
      REGISTRY_TOKEN: ${{ secrets.QUAY_ROBOT_TOKEN }}
    strategy:
      matrix:
        image-variant:
          [
            { image: docker-stacks-foundation, variant: default },
            { image: base-notebook, variant: default },
          ]
    needs: [build-aarch64, build-x86_64]
    if: |
      always() &&
      needs.build-x86_64.result == 'success' &&
      (needs.build-aarch64.result == 'success' || needs.build-aarch64.result == 'skipped') &&
      contains(github.event.pull_request.title, '[FAST_BUILD]')

  wiki-update:
    uses: ./.github/workflows/docker-wiki-update.yml
    needs: [build-aarch64, build-x86_64]
    if: github.repository_owner == 'jupyter'
    permissions:
      contents: write

  contributed-recipes:
    uses: ./.github/workflows/contributed-recipes.yml
    needs: [merge-tags]
    if: github.repository_owner == 'jupyter' && (github.ref == 'refs/heads/main' || github.event_name == 'schedule')
