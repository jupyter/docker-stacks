name: Build and test Docker Images

on:
  schedule:
    # Weekly, at 03:00 on Monday UTC time
    - cron: "0 3 * * 1"
  pull_request:
    paths:
      - ".github/workflows/build-test-docker.yml"

      - "all-spark-notebook/**"
      - "base-notebook/**"
      - "datascience-notebook/**"
      - "minimal-notebook/**"
      - "pyspark-notebook/**"
      - "r-notebook/**"
      - "scipy-notebook/**"
      - "tensorflow-notebook/**"

      - "tagging/**"
      - "test/**"
      - "conftest.py"
      - "Makefile"
      - "pytest.ini"
      - "requirements-dev.txt"
  push:
    branches:
      - main
      - master
      - trallard/* #testing while developing
    paths:
      - ".github/workflows/docker.yml"
      - ".github/workflows/build-test-docker.yml"

      - "all-spark-notebook/**"
      - "base-notebook/**"
      - "datascience-notebook/**"
      - "minimal-notebook/**"
      - "pyspark-notebook/**"
      - "r-notebook/**"
      - "scipy-notebook/**"
      - "tensorflow-notebook/**"

      - "tagging/**"
      - "test/**"
      - "conftest.py"
      - "Makefile"
      - "pytest.ini"
      - "dodo.py"
      - "requirements-dev.txt"
  workflow_dispatch:

# https://docs.github.com/en/actions/using-jobs/using-concurrency
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Maximize build space 🛠
        run: |
          sudo rm -rf /usr/share/dotnet
          sudo rm -rf /usr/local/lib/android
          sudo rm -rf /opt/ghc

      # Setup docker to build for multiple platforms, see:
      # https://github.com/docker/build-push-action/tree/master#usage
      # https://github.com/docker/build-push-action/blob/master/docs/advanced/multi-platform.md
      - name: Set up QEMU (for docker buildx) 🐳
        uses: docker/setup-qemu-action@27d0a4f181a40b142cce983c5393082c365d1480 # dependabot updates to latest release

      # https://github.com/docker/build-push-action/tree/master#usage
      - name: Set up Docker Buildx (for multi-arch builds) 🐳
        uses: docker/setup-buildx-action@94ab11c41e45d028884a99163086648e898eed25 # dependabot updates to latest release

      - name: Clone main repo ⚡️
        uses: actions/checkout@v2
        with:
          path: main

      - name: Cache dependencies 🧠
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python 🐍
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dev Dependencies 📦
        run: |
          python -m pip install --upgrade pip
          make -C main install-dev-env

      # https://github.com/docker/build-push-action/blob/master/docs/advanced/cache.md#github-cache
      - name: Build Docker Images 🛠
        run: |
          python -m doit -f main/dodo.py docker_build
        env:
          # Full logs for CI build
          BUILDKIT_PROGRESS: plain
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Save Docker image as artifact 💾
        uses: actions/upload-artifact@v2
        with:
          name: docker-images-${{ github.sha }}
          path: |
            main/.github/built_docker_images/
          retention-days: 1

  test-images:
    name: Test Docker images
    runs-on: ubuntu-latest
    needs: [build-images]
    steps:
      - name: Clone main repo ⚡️
        uses: actions/checkout@v2
        with:
          path: main

      - name: Cache dependencies 🧠
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python 🐍
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dev Dependencies 📦
        run: |
          python -m pip install --upgrade pip
          make -C main install-dev-env

      - name: Download built  images
        uses: actions/download-artifact@v2
        with:
          name: docker-images-${{ github.sha }}
          path: |
            main/.github/built_docker_images/

      - name: Run tests ✅
        run: python -m doit -f main/dodo.py docker_test

  create-manifests:
    name: Create tags and manifests
    runs-on: ubuntu-latest
    needs: [build-images]
    steps:
      - name: Clone main repo ⚡️
        uses: actions/checkout@v2
        with:
          path: main

      - name: Cache dependencies 🧠
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Setup Python 🐍
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install Dev Dependencies 📦
        run: |
          python -m pip install --upgrade pip
          make -C main install-dev-env

      - name: Checkout wiki 📃
        uses: actions/checkout@v2
        with:
          repository: ${{github.repository}}.wiki
          path: wiki

      - name: Create tags and manifest 🏷
        run: |
          python -m doit -f main/dodo.py docker_create_manifest

      - name: Push Wiki to GitHub 📤
        if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' || github.event_name == 'schedule'
        uses: stefanzweifel/git-auto-commit-action@5804e42f86b1891093b151b6c4e78e759c746c4d # dependabot updates to latest release
        with:
          commit_message: "Automated wiki publish for ${{github.sha}}"
          repository: wiki/
