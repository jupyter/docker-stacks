name: Download a parent image, build a new one, and test it; then upload the image, tags, and manifests to GitHub artifacts

env:
  REGISTRY: quay.io
  OWNER: ${{ github.repository_owner }}

on:
  workflow_call:
    inputs:
      parent-image:
        description: Parent image name
        required: true
        type: string
      image:
        description: Image name
        required: true
        type: string
      platform:
        description: Image platform
        required: true
        type: string
      runs-on:
        description: GitHub Actions Runner image
        required: true
        type: string

jobs:
  build-test-upload:
    runs-on: ${{ inputs.runs-on }}

    steps:
      - name: Checkout Repo ⚡️
        uses: actions/checkout@v4
      - name: Create dev environment 📦
        uses: ./.github/actions/create-dev-env

      # Self-hosted runners share a state (whole VM) between runs
      # Also, they might have running or stopped containers,
      # which are not cleaned up by `docker system prune`
      - name: Reset docker state and cleanup artifacts 🗑️
        if: inputs.platform != 'x86_64'
        run: |
          docker kill $(docker ps --quiet) || true
          docker rm $(docker ps --all --quiet) || true
          docker system prune --all --force
          rm -rf /tmp/jupyter/
        shell: bash

      - name: Load parent built image to Docker 📥
        if: inputs.parent-image != ''
        uses: ./.github/actions/load-image
        with:
          image: ${{ inputs.parent-image }}
          platform: ${{ inputs.platform }}

      - name: Pull ubuntu:22.04 image 📥
        if: inputs.parent-image == ''
        run: docker pull ubuntu:22.04
        shell: bash

      - name: Build image 🛠
        run: docker build --rm --force-rm --tag ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ inputs.image }} images/${{ inputs.image }}/ --build-arg REGISTRY=${{ env.REGISTRY }} --build-arg OWNER=${{ env.OWNER }}
        env:
          DOCKER_BUILDKIT: 1
          # Full logs for CI build
          BUILDKIT_PROGRESS: plain
        shell: bash

      - name: Run tests ✅
        run: python3 -m tests.run_tests --short-image-name ${{ inputs.image }} --registry ${{ env.REGISTRY }} --owner ${{ env.OWNER }}
        shell: bash

      - name: Write tags file 🏷
        run: |
          python3 -m tagging.write_tags_file --short-image-name ${{ inputs.image }} --tags-dir /tmp/jupyter/tags/ --registry ${{ env.REGISTRY }} --owner ${{ env.OWNER }}
        shell: bash
      - name: Upload tags file 💾
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}-tags
          path: /tmp/jupyter/tags/${{ inputs.platform }}-${{ inputs.image }}.txt
          retention-days: 3

      - name: Write manifest and build history file 🏷
        run: python3 -m tagging.write_manifest --short-image-name ${{ inputs.image }} --hist-lines-dir /tmp/jupyter/hist_lines/ --manifests-dir /tmp/jupyter/manifests/ --registry ${{ env.REGISTRY }} --owner ${{ env.OWNER }}
        shell: bash
      - name: Upload manifest file 💾
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}-manifest
          path: /tmp/jupyter/manifests/${{ inputs.platform }}-${{ inputs.image }}-*.md
          retention-days: 3
      - name: Upload build history line 💾
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}-history_line
          path: /tmp/jupyter/hist_lines/${{ inputs.platform }}-${{ inputs.image }}-*.txt
          retention-days: 3

      - name: Save image as a tar for later use 💾
        run: |
          mkdir -p /tmp/jupyter/images/
          docker save ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ inputs.image }} | zstd > /tmp/jupyter/images/${{ inputs.image }}-${{ inputs.platform }}.tar.zst
        shell: bash
      - name: Upload image as artifact 💾
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.image }}-${{ inputs.platform }}
          path: /tmp/jupyter/images/${{ inputs.image }}-${{ inputs.platform }}.tar.zst
          retention-days: 3
