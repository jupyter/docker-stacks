name: Download a Docker image and its tags from GitHub artifacts, apply them, and push the image to the Registry

env:
  REGISTRY: quay.io
  OWNER: ${{ github.repository_owner }}
  PUSH_TO_REGISTRY: ${{ (github.repository_owner == 'jupyter' || github.repository_owner == 'mathbunnyru') && (github.ref == 'refs/heads/main' || github.event_name == 'schedule') }}

on:
  workflow_call:
    inputs:
      image:
        description: Image name
        required: true
        type: string
      variant:
        description: Variant tag prefix
        required: true
        type: string
      timeout-minutes:
        description: Timeout in minutes
        default: 20
        type: number
    secrets:
      REGISTRY_USERNAME:
        required: true
      REGISTRY_TOKEN:
        required: true

jobs:
  tag-push:
    runs-on: ubuntu-24.04
    timeout-minutes: ${{ inputs.timeout-minutes }}

    steps:
      # Image with CUDA needs extra disk space
      - name: Free disk space üßπ
        if: contains(inputs.variant, 'cuda')
        uses: jlumbroso/free-disk-space@54081f138730dfa15788a46383842cd2f914a1be # v1.3.1
        with:
          tool-cache: false
          android: true
          dotnet: true
          haskell: true
          large-packages: false
          docker-images: false
          swap-storage: false

      - name: Checkout Repo ‚ö°Ô∏è
        uses: actions/checkout@v4
      - name: Create dev environment üì¶
        uses: ./.github/actions/create-dev-env

      - name: Download aarch64 image tar and apply tags üè∑
        uses: ./.github/actions/apply-single-tags
        with:
          image: ${{ inputs.image }}
          variant: ${{ inputs.variant }}
          platform: aarch64
        if: ${{ !contains(inputs.variant, 'cuda') }}

      - name: Download x86_64 image tar and apply tags üè∑
        uses: ./.github/actions/apply-single-tags
        with:
          image: ${{ inputs.image }}
          variant: ${{ inputs.variant }}
          platform: x86_64

      - name: Login to Registry üîê
        if: env.PUSH_TO_REGISTRY == 'true'
        run: |
          docker login ${{ env.REGISTRY }} \
            --username ${{ secrets.REGISTRY_USERNAME }} \
            --password ${{ secrets.REGISTRY_TOKEN }} || \
          docker login ${{ env.REGISTRY }} \
            --username ${{ secrets.REGISTRY_USERNAME }} \
            --password ${{ secrets.REGISTRY_TOKEN }}
        shell: bash
        id: login

      - name: Push single platform images to Registry üì§
        if: env.PUSH_TO_REGISTRY == 'true'
        run: |
          docker push --all-tags ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ inputs.image }} || \
          docker push --all-tags ${{ env.REGISTRY }}/${{ env.OWNER }}/${{ inputs.image }}
        shell: bash

      - name: Merge tags for the images üîÄ
        run: |
          python3 -m tagging.apps.merge_tags \
            --image ${{ inputs.image }} \
            --variant ${{ inputs.variant }} \
            --tags-dir /tmp/jupyter/tags/
        shell: bash

      - name: Logout from Registry üîê
        if: always() && env.PUSH_TO_REGISTRY == 'true' && steps.login.outcome == 'success'
        run: |
          docker logout ${{ env.REGISTRY }}
        shell: bash
