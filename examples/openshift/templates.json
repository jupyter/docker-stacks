{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "jupyter-notebook",
    "annotations": {
      "openshift.io/display-name": "Jupyter Notebook",
      "description": "Template for deploying Jupyter Notebook images.",
      "iconClass": "icon-python",
      "tags": "python,jupyter"
    }
  },
  "parameters": [
    {
      "name": "APPLICATION_NAME",
      "value": "notebook",
      "required": true
    },
    {
      "name": "NOTEBOOK_IMAGE",
      "value": "docker.io/jupyter/minimal-notebook:latest",
      "required": true
    },
    {
      "name": "NOTEBOOK_PASSWORD",
      "from": "[a-f0-9]{32}",
      "generate": "expression"
    }
  ],
  "objects": [
    {
      "kind": "ConfigMap",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}-cfg",
        "labels": {
          "app": "${APPLICATION_NAME}"
        }
      },
      "data": {
        "jupyter_server_config.py": "import os\n\npassword = os.environ.get('JUPYTER_NOTEBOOK_PASSWORD')\n\nif password:\n    from jupyter_server.auth import passwd\n    c.ServerApp.password = passwd(password)\n    del password\n    del os.environ['JUPYTER_NOTEBOOK_PASSWORD']\n\nimage_config_file = '/home/jovyan/.jupyter/jupyter_server_config.py'\n\nif os.path.exists(image_config_file):\n    with open(image_config_file) as fp:\n        exec(compile(fp.read(), image_config_file, 'exec'), globals())\n"
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "app": "${APPLICATION_NAME}"
        }
      },
      "spec": {
        "strategy": {
          "type": "Recreate"
        },
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "app": "${APPLICATION_NAME}",
          "deploymentconfig": "${APPLICATION_NAME}"
        },
        "template": {
          "metadata": {
            "annotations": {
              "alpha.image.policy.openshift.io/resolve-names": "*"
            },
            "labels": {
              "app": "${APPLICATION_NAME}",
              "deploymentconfig": "${APPLICATION_NAME}"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "jupyter-notebook",
                "image": "${NOTEBOOK_IMAGE}",
                "command": [
                  "start-notebook.py",
                  "--config=/etc/jupyter/openshift/jupyter_server_config.py",
                  "--no-browser",
                  "--ip=0.0.0.0"
                ],
                "ports": [
                  {
                    "containerPort": 8888,
                    "protocol": "TCP"
                  }
                ],
                "env": [
                  {
                    "name": "JUPYTER_NOTEBOOK_PASSWORD",
                    "value": "${NOTEBOOK_PASSWORD}"
                  }
                ],
                "volumeMounts": [
                  {
                    "mountPath": "/etc/jupyter/openshift",
                    "name": "configs"
                  }
                ]
              }
            ],
            "automountServiceAccountToken": false,
            "securityContext": {
              "supplementalGroups": [100]
            },
            "volumes": [
              {
                "configMap": {
                  "name": "${APPLICATION_NAME}-cfg"
                },
                "name": "configs"
              }
            ]
          }
        }
      }
    },
    {
      "kind": "Route",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "app": "${APPLICATION_NAME}"
        }
      },
      "spec": {
        "host": "",
        "to": {
          "kind": "Service",
          "name": "${APPLICATION_NAME}",
          "weight": 100
        },
        "port": {
          "targetPort": "8888-tcp"
        },
        "tls": {
          "termination": "edge",
          "insecureEdgeTerminationPolicy": "Redirect"
        }
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${APPLICATION_NAME}",
        "labels": {
          "app": "${APPLICATION_NAME}"
        }
      },
      "spec": {
        "ports": [
          {
            "name": "8888-tcp",
            "protocol": "TCP",
            "port": 8888,
            "targetPort": 8888
          }
        ],
        "selector": {
          "app": "${APPLICATION_NAME}",
          "deploymentconfig": "${APPLICATION_NAME}"
        },
        "type": "ClusterIP"
      }
    }
  ]
}
